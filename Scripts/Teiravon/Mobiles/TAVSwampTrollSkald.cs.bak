using System;
using System.Collections;
using Server.Items;
using Server.Targeting;

namespace Server.Mobiles
{
	[CorpseName( "a swamp troll corpse" )]
	public class SwampTrollSkald : BaseCreature
	{
		[Constructable]
		public SwampTrollSkald() : base( AIType.AI_Melee, FightMode.Closest, 10, 1, 0.2, 0.4 )
		{
			Name = "a swamp troll skald";
			Body = 766;
			BaseSoundID = 461;
			Hue = 2546;
			Level = 18;

			SetStr( 527, 565 );
			SetDex( 96, 115 );
			SetInt( 76, 100 );

			SetHits( 840, 956 );

			SetDamage( 15, 20 );

			SetDamageType( ResistanceType.Physical, 75 );
			SetDamageType( ResistanceType.Cold, 25 );

			SetResistance( ResistanceType.Physical, 75, 85 );
			SetResistance( ResistanceType.Cold, 60, 70 );
			SetResistance( ResistanceType.Poison, 55, 60 );
			SetResistance( ResistanceType.Energy, 40, 70 );

			SetSkill( SkillName.MagicResist, 95.1, 100.0 );
			SetSkill( SkillName.Tactics, 100.0, 110.0 );
			SetSkill( SkillName.Wrestling, 100.0, 105.0 );

			Fame = 8000;
			Karma = -4000;

			VirtualArmor = 50;

			PackItem( new DoubleAxe() ); // TODO: Weapon??
		}

		public override void GenerateLoot()
		{
			AddLoot( LootPack.Average );
			AddLoot( LootPack.Gems );
		}
		public override HideType HideType{ get{ return HideType.Barbed; } }
		public override int Hides{ get{ return 25; } }
		public override int Meat{ get{ return 10; } }

		public SwampTrollSkald( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( (int) 0 );
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}